{"version":3,"sources":["alertas.js","app.js","contrato.js","clientesContrato.js","grafico.js","tradingview-widget.js"],"names":["confirmDelete","event","id","preventDefault","Swal","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","isConfirmed","document","getElementById","submit","menu","btnFlotante","querySelector","addEventListener","classList","contains","remove","add","carrouselInicio","carrusel","elementos","querySelectorAll","navContainer","startX","indiceActual","isDragging","actualizarNavDots","forEach","dot","index","toggle","moverSiguiente","length","actualizarCarrusel","offset","element","style","transform","_","createElement","moveToIndex","appendChild","e","touches","clientX","moveX","diffX","Math","abs","moverAnterior","setInterval","idiomas","languageToggle","circle","urlSearchParams","URLSearchParams","window","location","search","updateCirclePosition","langParam","get","newLang","set","newUrl","origin","pathname","toString","setTimeout","href","alertaFormulario","alerta","descargarContrato","contratoUrl","inputCliente","clientes","clientesFiltrados","inputHiddenCliente","listadoClientes","async","respuesta","fetch","resultado","map","cliente","nombre","trim","apellido","formatearClientes","json","obtenerClientes","busqueda","target","value","expresion","RegExp","replace","filter","toLowerCase","normalize","getElementsByTagName","firstChild","removeChild","clienteHTML","textContent","dataset","clienteId","onclick","seleccionarCliente","noResultado","mostrarClientes","iniciarApp","url","obtenerCliente","clienteDOM","labelCliente","verificarElementos","clientePrevio","grafica","balanceTotal","contratos","inversiones","reduce","total","contrato","parseFloat","inversion","intereses","interes","ctx","getContext","Chart","type","data","labels","datasets","backgroundColor","options","plugins","tooltip","callbacks","label","context","parsed","Intl","NumberFormat","currency","format","obtenerDatos","cajaSection","container","className","widget","parentNode","insertBefore","nextSibling","script","src","innerHTML"],"mappings":"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","file":"bundle.js","sourcesContent":["function confirmDelete(event, id) {\r\n\r\n    event.preventDefault(); // Previne el envío del formulario inmediatamente\r\n\r\n    Swal.fire({\r\n        title: 'Confirmación',\r\n        text: '¿Estás seguro de que deseas eliminar este registro?',\r\n        icon: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Sí, eliminar',\r\n        cancelButtonText: 'Cancelar'\r\n    }).then((result) => {\r\n        if (result.isConfirmed) {\r\n            document.getElementById(id).submit();\r\n        }\r\n    });\r\n}","document.addEventListener(\"DOMContentLoaded\", function () {\r\n  menu();\r\n  carrouselInicio();\r\n  idiomas();\r\n  alertaFormulario();\r\n});\r\n\r\nfunction menu() {\r\n  const btnFlotante = document.querySelector(\".abrir_menu\");\r\n  const menu = document.querySelector(\".caja_nav\");\r\n\r\n  if(btnFlotante) {\r\n    btnFlotante.addEventListener(\"click\", abrirCerrarMenu);\r\n\r\n    function abrirCerrarMenu() {\r\n      if (menu.classList.contains(\"activo\")) {\r\n        menu.classList.remove(\"activo\");\r\n        btnFlotante.classList.remove(\"activo\");\r\n      } else {\r\n        menu.classList.add(\"activo\");\r\n        btnFlotante.classList.add(\"activo\");\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction carrouselInicio() {\r\n  const carrusel = document.querySelector(\".carrusel\");\r\n  const elementos = document.querySelectorAll(\".carrusel .elemento\");\r\n  const navContainer = document.querySelector(\".carrusel-nav\");\r\n  let indiceActual = 0;\r\n  let startX;\r\n  let isDragging = false;\r\n\r\n  if (carrusel) {\r\n    // Crear puntos de navegación\r\n    elementos.forEach((_, index) => {\r\n      const dot = document.createElement(\"div\");\r\n      dot.classList.add(\"nav-dot\");\r\n      if (index === 0) {\r\n        dot.classList.add(\"active\"); // Establecer el primer punto como activo\r\n      }\r\n      dot.addEventListener(\"click\", () => {\r\n        moveToIndex(index);\r\n      });\r\n      navContainer.appendChild(dot);\r\n    });\r\n\r\n    // Función para mover el carrusel a un índice específico y actualizar los puntos\r\n    function moveToIndex(index) {\r\n      indiceActual = index;\r\n      actualizarCarrusel();\r\n      actualizarNavDots();\r\n    }\r\n\r\n    // Función para actualizar los puntos de navegación\r\n    function actualizarNavDots() {\r\n      navContainer.querySelectorAll(\".nav-dot\").forEach((dot, index) => {\r\n        dot.classList.toggle(\"active\", index === indiceActual);\r\n      });\r\n    }\r\n\r\n    // Funciones para el deslizamiento táctil\r\n    carrusel.addEventListener(\"touchstart\", (e) => {\r\n      startX = e.touches[0].clientX;\r\n      isDragging = true;\r\n    });\r\n\r\n    carrusel.addEventListener(\"touchmove\", (e) => {\r\n      if (isDragging) {\r\n        const moveX = e.touches[0].clientX;\r\n        const diffX = moveX - startX;\r\n        if (Math.abs(diffX) > 30) {\r\n          if (diffX > 0) {\r\n            moverAnterior();\r\n          } else {\r\n            moverSiguiente();\r\n          }\r\n          startX = moveX;\r\n          isDragging = false;\r\n        }\r\n      }\r\n    });\r\n\r\n    carrusel.addEventListener(\"touchend\", () => {\r\n      isDragging = false;\r\n    });\r\n\r\n    // Función para mover al siguiente elemento\r\n    function moverSiguiente() {\r\n      if (indiceActual < elementos.length - 1) {\r\n        indiceActual++;\r\n      } else {\r\n        indiceActual = 0;\r\n      }\r\n      actualizarCarrusel();\r\n      actualizarNavDots();\r\n    }\r\n\r\n    // Función para mover al elemento anterior\r\n    function moverAnterior() {\r\n      if (indiceActual > 0) {\r\n        indiceActual--;\r\n      } else {\r\n        indiceActual = elementos.length - 1;\r\n      }\r\n      actualizarCarrusel();\r\n      actualizarNavDots();\r\n    }\r\n\r\n    // Función para actualizar el carrusel\r\n    function actualizarCarrusel() {\r\n      const offset = -indiceActual * 100;\r\n      elementos.forEach((element) => {\r\n        element.style.transform = `translateX(${offset}%)`;\r\n      });\r\n    }\r\n\r\n    // Establecer intervalo para cambiar al siguiente elemento cada 4 segundos\r\n    setInterval(moverSiguiente, 5000);\r\n  }\r\n}\r\n\r\nfunction idiomas() {\r\n  const languageToggle = document.querySelector(\".language-toggle\");\r\n  const circle = document.querySelector(\".circle\");\r\n\r\n  if (languageToggle) {\r\n    // Obtener el parámetro de idioma actual de la URL\r\n    const urlSearchParams = new URLSearchParams(window.location.search);\r\n\r\n    // Función para actualizar la posición del círculo según el idioma\r\n    function updateCirclePosition() {\r\n      const langParam = urlSearchParams.get(\"lang\");\r\n\r\n      if (langParam === \"es\") {\r\n        circle.style.transform = \"translate(0, -50%)\";\r\n      } else if (langParam === \"en\") {\r\n        circle.style.transform = \"translate(100%, -50%)\";\r\n      }\r\n    }\r\n\r\n    // Toggle del botón y actualización de la posición del círculo al hacer clic\r\n    languageToggle.addEventListener(\"click\", function () {\r\n      languageToggle.classList.toggle(\"active\");\r\n\r\n      // Obtener el parámetro de idioma actual de la URL\r\n      const currentLang = urlSearchParams.get(\"lang\");\r\n\r\n      // Cambiar el parámetro de idioma entre 'es' y 'en'\r\n      const newLang = currentLang === \"es\" ? \"en\" : \"es\";\r\n\r\n      // Actualizar la URL con el nuevo parámetro de idioma\r\n      urlSearchParams.set(\"lang\", newLang);\r\n      const newUrl = `${window.location.origin}${window.location.pathname}?${urlSearchParams.toString()}`;\r\n\r\n      // Actualizar la posición del círculo después de un pequeño retraso\r\n      setTimeout(() => {\r\n        updateCirclePosition();\r\n      }, 300); // Ajusta el valor del retraso según sea necesario\r\n\r\n      // Actualizar la URL sin recargar completamente la página\r\n      setTimeout(() => {\r\n        window.location.href = newUrl;\r\n      }, 600);\r\n    });\r\n\r\n    \r\n    updateCirclePosition();\r\n  }\r\n}\r\n\r\n// Alerta Formulario\r\nfunction alertaFormulario() {\r\n  const alertas = document.querySelectorAll(\".desaparecer-alerta\");\r\n\r\n  alertas.forEach(alerta => {\r\n    if(alerta) {\r\n      setTimeout(() => {\r\n        alerta.remove();\r\n      }, 4000);\r\n    }\r\n  });\r\n}","// Función para descargar un contrato\r\nfunction descargarContrato(contratoUrl) {\r\n    // Lógica para descargar el contrato, por ejemplo, redirigir a la URL del contrato\r\n    window.location.href = contratoUrl;\r\n}\r\n","(function () {\r\n    const inputCliente = document.querySelector(\"#clienteContrato\");\r\n\r\n    if(inputCliente) {\r\n        let clientes = [];\r\n        let clientesFiltrados = [];\r\n\r\n        const inputHiddenCliente = document.querySelector(\"[name=inversionista_id]\");\r\n        const listadoClientes = document.querySelector(\"#listado-clientes\");\r\n\r\n        obtenerClientes();\r\n        inputCliente.addEventListener('input', buscarClientes);\r\n\r\n        if(inputHiddenCliente.value) {\r\n\r\n            async function iniciarApp() {\r\n                const cliente = await obtenerCliente(inputHiddenCliente.value);\r\n\r\n                const {nombre, apellido} = cliente;\r\n\r\n                const clienteDOM = document.createElement('LI');\r\n                clienteDOM.classList.add(\"listado-clientes__cliente\", \"listado-clientes__cliente--seleccionado\", \"listado-clientes__cliente--con-margen\");\r\n                clienteDOM.textContent = `${nombre} ${apellido}`;\r\n                \r\n                listadoClientes.appendChild(clienteDOM);\r\n\r\n                // Estilos al label\r\n                labelCliente.classList.add('formulario__label--li');\r\n                inputCliente.addEventListener('input', verificarElementos);\r\n            }\r\n\r\n            function verificarElementos() {\r\n                    \r\n                if (listadoClientes.getElementsByTagName('li').length > 0) {\r\n                    labelCliente.classList.add('formulario__label--li');\r\n\r\n                } else {\r\n                    labelCliente.classList.remove('formulario__label--li');\r\n                }\r\n            }\r\n\r\n            iniciarApp();\r\n            inputCliente.addEventListener('input', iniciarApp);\r\n        }\r\n\r\n        async function obtenerClientes() {\r\n            const url = '/api/clientes'\r\n            const respuesta = await fetch(url);\r\n            const resultado = await respuesta.json();\r\n\r\n            formatearClientes(resultado);\r\n        }\r\n\r\n        async function obtenerCliente(id) {\r\n            const url = `/api/cliente?id=${id}`;\r\n            const respuesta = await fetch(url);\r\n            const resultado = await respuesta.json();\r\n        \r\n            return resultado;\r\n        }\r\n        \r\n        function formatearClientes(resultado = []) {\r\n            clientes = resultado.map( cliente => {\r\n                return {\r\n                    nombre: `${cliente.nombre.trim()} ${cliente.apellido.trim()}`,\r\n                    id: cliente.id\r\n                }\r\n            });\r\n        }\r\n\r\n        // Función para escapar caracteres especiales de una cadena\r\n        function escapeRegExp(str) {\r\n            return str.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\r\n        }\r\n\r\n        function buscarClientes(e) {\r\n            const busqueda = e.target.value;\r\n        \r\n            if (busqueda.length > 3) {\r\n                // Utilizar escapeRegExp para tratar la entrada del usuario como literal en la expresión regular\r\n                const expresion = new RegExp(escapeRegExp(busqueda), \"i\");\r\n        \r\n                clientesFiltrados = clientes.filter(cliente => {\r\n                    // Utilizar normalize para tratar caracteres acentuados\r\n                    const nombreNormalizado = cliente.nombre.toLowerCase().normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\r\n                    \r\n                    if (nombreNormalizado.search(expresion) !== -1) {\r\n                        return cliente;\r\n                    }\r\n                });\r\n            } else {\r\n                clientesFiltrados = [];\r\n            }\r\n        \r\n        mostrarClientes();\r\n        }\r\n        \r\n        function mostrarClientes() {\r\n\r\n            // Agrega un evento al input para detectar cambios\r\n            inputCliente.addEventListener(\"input\", function() {\r\n                if (listadoClientes.getElementsByTagName(\"li\").length > 0) {\r\n                    listadoClientes.classList.add(\"listado-clientes__cliente--con-margen\");\r\n                } else {\r\n                    listadoClientes.classList.remove(\"listado-clientes__cliente--con-margen\");\r\n                }\r\n            });\r\n\r\n            while(listadoClientes.firstChild) {\r\n                listadoClientes.removeChild(listadoClientes.firstChild)\r\n            }\r\n\r\n            if(clientesFiltrados.length > 0) {\r\n                clientesFiltrados.forEach( cliente => {\r\n                    const clienteHTML = document.createElement('LI');\r\n                    clienteHTML.classList.add(\"listado-clientes__cliente\");\r\n                    clienteHTML.textContent = cliente.nombre;\r\n                    clienteHTML.dataset.clienteId = cliente.id;\r\n                    clienteHTML.onclick = seleccionarCliente;\r\n        \r\n                    listadoClientes.appendChild(clienteHTML);\r\n                });\r\n            } else if (inputCliente.value.length > 3) {\r\n                const noResultado = document.createElement('P');\r\n                noResultado.classList.add('listado-clientes__no-resultado');\r\n                noResultado.textContent = 'No hay resultados para tu búsqueda';\r\n                \r\n                listadoClientes.appendChild(noResultado);\r\n            \r\n            }\r\n                \r\n        }\r\n\r\n        function seleccionarCliente(e) {\r\n            const cliente = e.target;\r\n\r\n            const clientePrevio = document.querySelector(\".listado-clientes__cliente--seleccionado\");\r\n\r\n            if(clientePrevio) {\r\n                clientePrevio.classList.remove(\"listado-clientes__cliente--seleccionado\");\r\n            }\r\n\r\n            cliente.classList.add(\"listado-clientes__cliente--seleccionado\");\r\n            \r\n            inputHiddenCliente.value = cliente.dataset.clienteId;\r\n        }\r\n    \r\n    }\r\n\r\n})();","(function() {\r\n    const grafica = document.querySelector('#inversion-grafica');\r\n    const balanceTotal = document.querySelector('#balance-total');\r\n    if(grafica) {\r\n        obtenerDatos();\r\n\r\n        async function obtenerDatos() {\r\n            const url = '/api/contratos';\r\n            const respuesta = await fetch(url);\r\n            const contratos = await respuesta.json();\r\n\r\n            const inversiones = contratos.reduce((total, contrato) => total + parseFloat(contrato.inversion), 0);\r\n            const intereses = contratos.reduce((total, contrato) => total + parseFloat(contrato.interes), 0);\r\n\r\n            balanceTotal.textContent = `$${inversiones + intereses}`;\r\n\r\n            const ctx = document.getElementById('inversion-grafica').getContext('2d');\r\n            const myChart = new Chart(ctx, {\r\n                type: 'doughnut',\r\n                data: {\r\n                    labels: ['Inversiones', 'Interés'],\r\n                    datasets: [{\r\n                        data: [inversiones, intereses],\r\n                        backgroundColor: [\r\n                            '#123c49',\r\n                            '#30aeb9'\r\n                        ]\r\n                    }]\r\n                },\r\n                options: {\r\n                    plugins: {\r\n                        tooltip: {\r\n                            callbacks: {\r\n                                label: function(context) {\r\n                                    let label = context.dataset.label || '';\r\n                                    if (label) {\r\n                                        label += ': ';\r\n                                    }\r\n                                    if (context.parsed !== 'undefined') {\r\n                                        label += new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(context.parsed);\r\n                                    }\r\n                                    return label;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    \r\n                }\r\n                \r\n            });\r\n        }\r\n    }\r\n})();\r\n","// widget-script.js\r\ndocument.addEventListener(\"DOMContentLoaded\", function() {\r\n  var cajaSection = document.querySelector('.criptos');\r\n\r\n  if(cajaSection) {\r\n    var container = document.createElement('div');\r\n    container.className = 'tradingview-widget-container criptomonedas';\r\n  \r\n    var widget = document.createElement('div');\r\n    widget.className = 'tradingview-widget-container__widget';\r\n  \r\n    container.appendChild(widget);\r\n  \r\n    cajaSection.parentNode.insertBefore(container, cajaSection.nextSibling);\r\n  \r\n    var script = document.createElement('script');\r\n    script.type = 'text/javascript';\r\n    script.src = 'https://s3.tradingview.com/external-embedding/embed-widget-ticker-tape.js';\r\n    script.async = true;\r\n    container.appendChild(script);\r\n  \r\n    script.innerHTML = `\r\n        {\r\n            \"symbols\": [\r\n                {\r\n                    \"proName\": \"FOREXCOM:SPXUSD\",\r\n                    \"title\": \"S&P 500\"\r\n                },\r\n                {\r\n                    \"proName\": \"FOREXCOM:NSXUSD\",\r\n                    \"title\": \"US 100\"\r\n                },\r\n                {\r\n                    \"proName\": \"BITSTAMP:BTCUSD\",\r\n                    \"title\": \"Bitcoin\"\r\n                },\r\n                {\r\n                    \"proName\": \"BITSTAMP:ETHUSD\",\r\n                    \"title\": \"Ethereum\"\r\n                },\r\n                {\r\n                    \"description\": \"USD/MXN\",\r\n                    \"proName\": \"FX:USDMXN\"\r\n                },\r\n                {\r\n                    \"description\": \"EUR/USD\",\r\n                    \"proName\": \"FX:EURUSD\"\r\n                }\r\n            ],\r\n            \"showSymbolLogo\": true,\r\n            \"colorTheme\": \"dark\",\r\n            \"isTransparent\": false,\r\n            \"displayMode\": \"adaptive\",\r\n            \"locale\": \"es\"\r\n        }\r\n    `;\r\n  }\r\n});\r\n  "]}