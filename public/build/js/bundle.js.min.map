{"version":3,"sources":["app.js","tradingview-widget.js"],"names":["menu","btnFlotante","document","querySelector","addEventListener","classList","contains","remove","add","carrouselInicio","carrusel","elementos","querySelectorAll","navContainer","startX","indiceActual","isDragging","actualizarNavDots","forEach","dot","index","toggle","moverSiguiente","length","actualizarCarrusel","offset","element","style","transform","_","createElement","moveToIndex","appendChild","e","touches","clientX","moveX","diffX","Math","abs","moverAnterior","setInterval","idiomas","languageToggle","circle","urlSearchParams","URLSearchParams","window","location","search","updateCirclePosition","langParam","get","newLang","set","newUrl","origin","pathname","toString","setTimeout","href","alertaFormulario","alerta","cajaSection","container","className","widget","parentNode","insertBefore","nextSibling","script","type","src","async","innerHTML"],"mappings":"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","file":"bundle.js","sourcesContent":["document.addEventListener(\"DOMContentLoaded\", function () {\r\n  menu();\r\n  carrouselInicio();\r\n  idiomas();\r\n  alertaFormulario();\r\n});\r\n\r\nfunction menu() {\r\n  const btnFlotante = document.querySelector(\".abrir_menu\");\r\n  const menu = document.querySelector(\".caja_nav\");\r\n\r\n  if(btnFlotante) {\r\n    btnFlotante.addEventListener(\"click\", abrirCerrarMenu);\r\n\r\n    function abrirCerrarMenu() {\r\n      if (menu.classList.contains(\"activo\")) {\r\n        menu.classList.remove(\"activo\");\r\n        btnFlotante.classList.remove(\"activo\");\r\n      } else {\r\n        menu.classList.add(\"activo\");\r\n        btnFlotante.classList.add(\"activo\");\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction carrouselInicio() {\r\n  const carrusel = document.querySelector(\".carrusel\");\r\n  const elementos = document.querySelectorAll(\".carrusel .elemento\");\r\n  const navContainer = document.querySelector(\".carrusel-nav\");\r\n  let indiceActual = 0;\r\n  let startX;\r\n  let isDragging = false;\r\n\r\n  if (carrusel) {\r\n    // Crear puntos de navegación\r\n    elementos.forEach((_, index) => {\r\n      const dot = document.createElement(\"div\");\r\n      dot.classList.add(\"nav-dot\");\r\n      if (index === 0) {\r\n        dot.classList.add(\"active\"); // Establecer el primer punto como activo\r\n      }\r\n      dot.addEventListener(\"click\", () => {\r\n        moveToIndex(index);\r\n      });\r\n      navContainer.appendChild(dot);\r\n    });\r\n\r\n    // Función para mover el carrusel a un índice específico y actualizar los puntos\r\n    function moveToIndex(index) {\r\n      indiceActual = index;\r\n      actualizarCarrusel();\r\n      actualizarNavDots();\r\n    }\r\n\r\n    // Función para actualizar los puntos de navegación\r\n    function actualizarNavDots() {\r\n      navContainer.querySelectorAll(\".nav-dot\").forEach((dot, index) => {\r\n        dot.classList.toggle(\"active\", index === indiceActual);\r\n      });\r\n    }\r\n\r\n    // Funciones para el deslizamiento táctil\r\n    carrusel.addEventListener(\"touchstart\", (e) => {\r\n      startX = e.touches[0].clientX;\r\n      isDragging = true;\r\n    });\r\n\r\n    carrusel.addEventListener(\"touchmove\", (e) => {\r\n      if (isDragging) {\r\n        const moveX = e.touches[0].clientX;\r\n        const diffX = moveX - startX;\r\n        if (Math.abs(diffX) > 30) {\r\n          if (diffX > 0) {\r\n            moverAnterior();\r\n          } else {\r\n            moverSiguiente();\r\n          }\r\n          startX = moveX;\r\n          isDragging = false;\r\n        }\r\n      }\r\n    });\r\n\r\n    carrusel.addEventListener(\"touchend\", () => {\r\n      isDragging = false;\r\n    });\r\n\r\n    // Función para mover al siguiente elemento\r\n    function moverSiguiente() {\r\n      if (indiceActual < elementos.length - 1) {\r\n        indiceActual++;\r\n      } else {\r\n        indiceActual = 0;\r\n      }\r\n      actualizarCarrusel();\r\n      actualizarNavDots();\r\n    }\r\n\r\n    // Función para mover al elemento anterior\r\n    function moverAnterior() {\r\n      if (indiceActual > 0) {\r\n        indiceActual--;\r\n      } else {\r\n        indiceActual = elementos.length - 1;\r\n      }\r\n      actualizarCarrusel();\r\n      actualizarNavDots();\r\n    }\r\n\r\n    // Función para actualizar el carrusel\r\n    function actualizarCarrusel() {\r\n      const offset = -indiceActual * 100;\r\n      elementos.forEach((element) => {\r\n        element.style.transform = `translateX(${offset}%)`;\r\n      });\r\n    }\r\n\r\n    // Establecer intervalo para cambiar al siguiente elemento cada 4 segundos\r\n    setInterval(moverSiguiente, 5000);\r\n  }\r\n}\r\n\r\nfunction idiomas() {\r\n  const languageToggle = document.querySelector(\".language-toggle\");\r\n  const circle = document.querySelector(\".circle\");\r\n\r\n  if (languageToggle) {\r\n    // Obtener el parámetro de idioma actual de la URL\r\n    const urlSearchParams = new URLSearchParams(window.location.search);\r\n\r\n    // Función para actualizar la posición del círculo según el idioma\r\n    function updateCirclePosition() {\r\n      const langParam = urlSearchParams.get(\"lang\");\r\n\r\n      if (langParam === \"es\") {\r\n        circle.style.transform = \"translate(0, -50%)\";\r\n      } else if (langParam === \"en\") {\r\n        circle.style.transform = \"translate(100%, -50%)\";\r\n      }\r\n    }\r\n\r\n    // Toggle del botón y actualización de la posición del círculo al hacer clic\r\n    languageToggle.addEventListener(\"click\", function () {\r\n      languageToggle.classList.toggle(\"active\");\r\n\r\n      // Obtener el parámetro de idioma actual de la URL\r\n      const currentLang = urlSearchParams.get(\"lang\");\r\n\r\n      // Cambiar el parámetro de idioma entre 'es' y 'en'\r\n      const newLang = currentLang === \"es\" ? \"en\" : \"es\";\r\n\r\n      // Actualizar la URL con el nuevo parámetro de idioma\r\n      urlSearchParams.set(\"lang\", newLang);\r\n      const newUrl = `${window.location.origin}${window.location.pathname}?${urlSearchParams.toString()}`;\r\n\r\n      // Actualizar la posición del círculo después de un pequeño retraso\r\n      setTimeout(() => {\r\n        updateCirclePosition();\r\n      }, 300); // Ajusta el valor del retraso según sea necesario\r\n\r\n      // Actualizar la URL sin recargar completamente la página\r\n      setTimeout(() => {\r\n        window.location.href = newUrl;\r\n      }, 600);\r\n    });\r\n\r\n    \r\n    updateCirclePosition();\r\n  }\r\n}\r\n\r\n// Alerta Formulario\r\nfunction alertaFormulario() {\r\n  const alerta = document.querySelector(\".alerta-correcto\");\r\n\r\n  if(alerta) {\r\n      setTimeout(() => {\r\n        alerta.remove();\r\n    }, 4000);\r\n  }\r\n}\r\n\r\n","// widget-script.js\r\ndocument.addEventListener(\"DOMContentLoaded\", function() {\r\n  var cajaSection = document.querySelector('.criptos');\r\n\r\n  if(cajaSection) {\r\n    var container = document.createElement('div');\r\n    container.className = 'tradingview-widget-container criptomonedas';\r\n  \r\n    var widget = document.createElement('div');\r\n    widget.className = 'tradingview-widget-container__widget';\r\n  \r\n    container.appendChild(widget);\r\n  \r\n    cajaSection.parentNode.insertBefore(container, cajaSection.nextSibling);\r\n  \r\n    var script = document.createElement('script');\r\n    script.type = 'text/javascript';\r\n    script.src = 'https://s3.tradingview.com/external-embedding/embed-widget-ticker-tape.js';\r\n    script.async = true;\r\n    container.appendChild(script);\r\n  \r\n    script.innerHTML = `\r\n        {\r\n            \"symbols\": [\r\n                {\r\n                    \"proName\": \"FOREXCOM:SPXUSD\",\r\n                    \"title\": \"S&P 500\"\r\n                },\r\n                {\r\n                    \"proName\": \"FOREXCOM:NSXUSD\",\r\n                    \"title\": \"US 100\"\r\n                },\r\n                {\r\n                    \"proName\": \"BITSTAMP:BTCUSD\",\r\n                    \"title\": \"Bitcoin\"\r\n                },\r\n                {\r\n                    \"proName\": \"BITSTAMP:ETHUSD\",\r\n                    \"title\": \"Ethereum\"\r\n                },\r\n                {\r\n                    \"description\": \"USD/MXN\",\r\n                    \"proName\": \"FX:USDMXN\"\r\n                },\r\n                {\r\n                    \"description\": \"EUR/USD\",\r\n                    \"proName\": \"FX:EURUSD\"\r\n                }\r\n            ],\r\n            \"showSymbolLogo\": true,\r\n            \"colorTheme\": \"dark\",\r\n            \"isTransparent\": false,\r\n            \"displayMode\": \"adaptive\",\r\n            \"locale\": \"es\"\r\n        }\r\n    `;\r\n  }\r\n});\r\n  "]}