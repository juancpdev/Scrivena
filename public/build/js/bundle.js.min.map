{"version":3,"sources":["app.js"],"names":["document","addEventListener","carrusel","querySelector","elementos","querySelectorAll","navContainer","startX","indiceActual","isDragging","actualizarNavDots","forEach","dot","index","classList","toggle","moverSiguiente","length","actualizarCarrusel","offset","element","style","transform","_","createElement","add","moveToIndex","appendChild","e","touches","clientX","moveX","diffX","Math","abs","moverAnterior","setInterval","btnFlotante","menu","contains","remove","getElementById","textContent","Date","getFullYear"],"mappings":"AAAAA,SAAAC,iBAAA,oBAAA,WACA,MAAAC,EAAAF,SAAAG,cAAA,aACAC,EAAAJ,SAAAK,iBAAA,uBACAC,EAAAN,SAAAG,cAAA,iBACA,IACAI,EADAC,EAAA,EAEAC,GAAA,EAuBA,SAAAC,IACAJ,EAAAD,iBAAA,YAAAM,QAAA,CAAAC,EAAAC,KACAD,EAAAE,UAAAC,OAAA,SAAAF,IAAAL,KA+BA,SAAAQ,IACAR,EAAAJ,EAAAa,OAAA,EACAT,IAEAA,EAAA,EAEAU,IACAR,IAeA,SAAAQ,IACA,MAAAC,EAAA,KAAAX,EACAJ,EAAAO,QAAAS,IACAA,EAAAC,MAAAC,UAAA,cAAAH,QA9EAf,EAAAO,QAAA,CAAAY,EAAAV,KACA,MAAAD,EAAAZ,SAAAwB,cAAA,OACAZ,EAAAE,UAAAW,IAAA,WACA,IAAAZ,GACAD,EAAAE,UAAAW,IAAA,UAEAb,EAAAX,iBAAA,QAAA,MAOA,SAAAY,GACAL,EAAAK,EACAK,IACAR,IATAgB,CAAAb,KAEAP,EAAAqB,YAAAf,KAkBAV,EAAAD,iBAAA,aAAA2B,IACArB,EAAAqB,EAAAC,QAAA,GAAAC,QACArB,GAAA,IAGAP,EAAAD,iBAAA,YAAA2B,IACA,GAAAnB,EAAA,CACA,MAAAsB,EAAAH,EAAAC,QAAA,GAAAC,QACAE,EAAAD,EAAAxB,EACA0B,KAAAC,IAAAF,GAAA,KACAA,EAAA,EA2BA,WACAxB,EAAA,EACAA,IAEAA,EAAAJ,EAAAa,OAAA,EAEAC,IACAR,IAjCAyB,GAEAnB,IAEAT,EAAAwB,EACAtB,GAAA,MAKAP,EAAAD,iBAAA,WAAA,KACAQ,GAAA,IAkCA2B,YAAApB,EAAA,KAEA,MAAAqB,EAAArC,SAAAG,cAAA,eACAmC,EAAAtC,SAAAG,cAAA,aAEAkC,EAAApC,iBAAA,SAEA,WACAqC,EAAAxB,UAAAyB,SAAA,WACAD,EAAAxB,UAAA0B,OAAA,UACAH,EAAAvB,UAAA0B,OAAA,YAEAF,EAAAxB,UAAAW,IAAA,UACAY,EAAAvB,UAAAW,IAAA,cAKAzB,SAAAyC,eAAA,QAAAC,aAAA,IAAAC,MAAAC","file":"bundle.js","sourcesContent":["document.addEventListener('DOMContentLoaded', function () {\r\n    const carrusel = document.querySelector('.carrusel');\r\n    const elementos = document.querySelectorAll('.carrusel .elemento');\r\n    const navContainer = document.querySelector('.carrusel-nav');\r\n    let indiceActual = 0;\r\n    let startX;\r\n    let isDragging = false;\r\n\r\n    // Crear puntos de navegación\r\n    elementos.forEach((_, index) => {\r\n        const dot = document.createElement('div');\r\n        dot.classList.add('nav-dot');\r\n        if (index === 0) {\r\n            dot.classList.add('active'); // Establecer el primer punto como activo\r\n        }\r\n        dot.addEventListener('click', () => {\r\n            moveToIndex(index);\r\n        });\r\n        navContainer.appendChild(dot);\r\n    });\r\n\r\n    // Función para mover el carrusel a un índice específico y actualizar los puntos\r\n    function moveToIndex(index) {\r\n        indiceActual = index;\r\n        actualizarCarrusel();\r\n        actualizarNavDots();\r\n    }\r\n\r\n    // Función para actualizar los puntos de navegación\r\n    function actualizarNavDots() {\r\n        navContainer.querySelectorAll('.nav-dot').forEach((dot, index) => {\r\n            dot.classList.toggle('active', index === indiceActual);\r\n        });\r\n    }\r\n\r\n    // Funciones para el deslizamiento táctil\r\n    carrusel.addEventListener('touchstart', (e) => {\r\n        startX = e.touches[0].clientX;\r\n        isDragging = true;\r\n    });\r\n\r\n    carrusel.addEventListener('touchmove', (e) => {\r\n        if (isDragging) {\r\n            const moveX = e.touches[0].clientX;\r\n            const diffX = moveX - startX;\r\n            if (Math.abs(diffX) > 30) {\r\n                if (diffX > 0) {\r\n                    moverAnterior();\r\n                } else {\r\n                    moverSiguiente();\r\n                }\r\n                startX = moveX;\r\n                isDragging = false;\r\n            }\r\n        }\r\n    });\r\n\r\n    carrusel.addEventListener('touchend', () => {\r\n        isDragging = false;\r\n    });\r\n\r\n    // Función para mover al siguiente elemento\r\n    function moverSiguiente() {\r\n        if (indiceActual < elementos.length - 1) {\r\n            indiceActual++;\r\n        } else {\r\n            indiceActual = 0;\r\n        }\r\n        actualizarCarrusel();\r\n        actualizarNavDots();\r\n    }\r\n\r\n    // Función para mover al elemento anterior\r\n    function moverAnterior() {\r\n        if (indiceActual > 0) {\r\n            indiceActual--;\r\n        } else {\r\n            indiceActual = elementos.length - 1;\r\n        }\r\n        actualizarCarrusel();\r\n        actualizarNavDots();\r\n    }\r\n\r\n    // Función para actualizar el carrusel\r\n    function actualizarCarrusel() {\r\n        const offset = -indiceActual * 100;\r\n        elementos.forEach(element => {\r\n            element.style.transform = `translateX(${offset}%)`;\r\n        });\r\n    }\r\n\r\n    // Establecer intervalo para cambiar al siguiente elemento cada 4 segundos\r\n    setInterval(moverSiguiente, 5000);\r\n\r\n    const btnFlotante = document.querySelector('.abrir_menu');\r\n    const menu = document.querySelector('.caja_nav');\r\n\r\n    btnFlotante.addEventListener('click', abrirCerrarMenu);\r\n\r\n    function abrirCerrarMenu() {\r\n        if (menu.classList.contains('activo')) {\r\n            menu.classList.remove('activo');\r\n            btnFlotante.classList.remove('activo');\r\n        } else {\r\n            menu.classList.add('activo');\r\n            btnFlotante.classList.add('activo');\r\n        }\r\n    }\r\n\r\n    // año copy\r\n    document.getElementById('year').textContent = new Date().getFullYear();\r\n});\r\n\r\n  \r\n  "]}